# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

# JavaScript snippets begin
'.source.js':

# Angular snippets
  # Component
  'ng Component':
    'prefix': 'ngcm'
    'body': """
    angular
    .module('$1')
    .component('$2', {
        controller: '$3Controller',
        templateUrl: '$4/components/$5/$5.template.html'
    });
    """

  # Component with bindings
  'ng Component with bindings':
    'prefix': 'ngcmb'
    'body': """
    angular
    .module('$1')
    .component('$2', {
        bindings: {
          $3: '$4',
        },
        controller: '$5Controller',
        templateUrl: '$6/components/$7/$7.template.html'
    });
    """

  # Controller
  'ng Controller':
    'prefix': 'ngc'
    'body': """
    angular
    .module('$1')
    .controller('$2Controller', [$2Controller]);

    function $2Controller() {
        var vm = this;

        $3

    }
    """

  # $onChanges()
  'vm.$onChanges() in ngController':
    'prefix': 'ngonc'
    'body': """
    // Watch for changes in bindings
    vm.$onChanges = function(obj) {
      if ('$1' in obj) {
        if (obj.$1.currentValue !== 'undefined') {
          $2
        }
      }
    }
    """


# Vanilla JavaScript snippets

  # Console log snippet
  'Console log':
    'prefix': 'cl'
    'body': "console.log('$1');$2"



# JavaScript snippets end


# Html snippets
'.text.html':

  # Angular Material snippets

  # md-input snippet
  'md-input snippet':
    'prefix': 'mdinput'
    'body': """
    <md-input-container>
    	<label>$1</label>
    	<input type="$2" name="" ng-model="$3" ng-model-options="{ debounce: 300 }">
    </md-input-container>
    """
